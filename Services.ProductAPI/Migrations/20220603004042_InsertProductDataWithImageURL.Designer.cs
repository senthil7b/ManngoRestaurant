// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Services.ProductAPI.DBContext;

namespace Services.ProductAPI.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220603004042_InsertProductDataWithImageURL")]
    partial class InsertProductDataWithImageURL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Services.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryName = "Appetizer",
                            Description = "Crispy Samosa",
                            ImageURL = "https://msuddemostorage.blob.core.windows.net/mango/Samosa.jpg",
                            Name = "Samosa",
                            Price = 15.0
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryName = "Appetizer",
                            Description = "Delicious Panner Tikka",
                            ImageURL = "https://msuddemostorage.blob.core.windows.net/mango/PannerTikka.jpg",
                            Name = "Panner Tikka",
                            Price = 20.0
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryName = "Dessert",
                            Description = "Sweet Pie",
                            ImageURL = "https://msuddemostorage.blob.core.windows.net/mango/SweetPie.jpg",
                            Name = "Sweet Pie",
                            Price = 10.0
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryName = "Starter",
                            Description = "Pav Bhaji",
                            ImageURL = "https://msuddemostorage.blob.core.windows.net/mango/PavBhaji.jpg",
                            Name = "Pav Bhaji",
                            Price = 15.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
